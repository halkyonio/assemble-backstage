stages:
  - build

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'push'



# before_script:
#   - buildah login -u "$QUAY_USER" -p "$QUAY_PASSWORD" quay.io

variables:
  QUAY_USER: $QUAY_USER
  QUAY_PASSWORD: $QUAY_PASSWORD
  SA_TOKEN: $SA_TOKEN
  REGISTRY: quay.io
  NAMESPACE: 360-consultant-feedback--default-team
  IMAGE_ORG: assemble
  IMAGE_NAME: backstage
  IMAGE_FULL_NAME: $REGISTRY/$IMAGE_ORG/$IMAGE_NAME

build-and-push-image:
  tags: 
  - backstage
  stage: build
  image: registry.redhat.io/openshift4/ose-tools-rhel8:v4.11
  script: 
  - mkdir -p .helm
  - cd .helm 
  - curl -fsSL https://get.helm.sh/helm-v3.9.3-linux-amd64.tar.gz | tar -zxv
  - cd ..
  - |
      ./.helm/linux-amd64/helm --debug --kube-apiserver https://kubernetes.default.svc:443 --kube-ca-file /var/run/secrets/kubernetes.io/serviceaccount/ca.crt --kube-token ${SA_TOKEN} \
      upgrade backstage-ci ./charts/backstage-ci -i -n ${NAMESPACE} --set image.org=${IMAGE_ORG} --set image.name=${IMAGE_NAME} --set image.commit_sha=${CI_COMMIT_SHORT_SHA} --set quay.username=${QUAY_USER} \
      --set quay.username=${QUAY_PASSWORD}
  - oc start-build backstage-ci -F -n ${NAMESPACE}-build  


  # script:
  #   - echo "{\"auths\":{\"${REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${QUAY_USER}" "${QUAY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > ./config.json
  #   #- buildah login -u "${$QUAY_USER}" -p "${QUAY_PASSWORD}" quay.io
  #   - buildah bud -t ${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA} .
  #   - buildah push --auth ./config.json ${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}
  # image: 
  #   name: registry.redhat.io/rhel8/buildah:8.6

  # image:
  #   name: gcr.io/kaniko-project/executor:debug
  #   entrypoint: [""]
  # script:
  #   - mkdir -p /kaniko/.docker
  #   - echo "{\"auths\":{\"${REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${QUAY_USER}" "${QUAY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  #   - >-
  #     /kaniko/executor
  #     --context "${CI_PROJECT_DIR}"
  #     --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
  #     --destination "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"      
      